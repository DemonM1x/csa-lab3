

data:
    hello: "Hello, world!"


;print_char:
;                load                ; load the character from memory address on TOS
;                out                 ; output the character
;                ret                 ;

;print_str:
;                dup                 ; str_len str_len
;                out
;                dup
;                push exit
;                swap
;                jz
;                dup                 ; str_addr symbol symbol
;                push ps_ret         ; str_addr symbol symbol ps_ret
;                swap                ; str_addr symbol ps_ret symbol
;                jz                  ; str_addr symbol
;                push print_char     ; str_addr symbol
;                call                ; str_addr
;                inc                 ; str_addr + 1 -> str_addr
;                push print_str      ; str_addr print_str
;                jmp                 ; str_addr
;ps_ret:
;                drop                ; str_addr (symbol)
;                drop                ; (str_addr)
;                ret                 ;

start:
                push hello          ; hello_addr
                load
                dup                 ; str_len str_len
                out
                dup
                push exit
                swap
                jz
                push hello
                push loop
                jmp
loop:
    ; out << chr
    inc                 ; [len, hello_addr++]
    dup                 ; [len, hello_addr, hello_addr]
    load                ; [len, hello_addr, chr]
    out                 ; [len, hello_addr]

    ; len--, halt if len == 0
    swap                ; [hello_addr, len]
    dec                 ; [hello_addr, len--]
    dup                 ; [hello_addr, len, len]
    push    exit       ; [hello_addr, len, len, break]
    swap                ; [hello_addr, len, break, len]
    jz                  ; [hello_addr, len]

    ; loop
    swap                ; [len, hello_addr]
    push    loop        ; [len, hello_addr, loop_addr]
    jmp                 ; [len, hello_addr]
exit:
                hlt                ;
